---
knitr:
  opts_chunk: 
    collapse: false
    comment: "#>" 
    fig.height: 4 
    fig.width: 4.8
    cache: true
    crop: true
---

# Manipuler les données vectorielles

## Le package `sf`

<img src="img/sf.gif" align="right" width="150"/> 
Le package `sf` [@R-sf] a été publié fin 2016 par Edzer Pebesma.
Ce package permet l'import, l'export, la manipulation et l'affichage de données spatiales vectorielles. Pour cela `sf` s'appuie sur une série de bibliothèques spatiales : GDAL [@GDAL] et PROJ [@PROJ] pour les opérations d'import, d'export et de projection, et GEOS [@GEOS] pour les opérations de géotraitement (buffer, intersection...).   
Ce package propose des objets simples (suivant le standard [*simple feature*](https://en.wikipedia.org/wiki/Simple_Features)) dont la manipulation est assez aisée. Une attention particulière a été portée à la compatibilité du package avec la syntaxe *pipe* (`|>` ou `%>%`) et les opérateurs du `tidyverse` [@R-tidyverse].


L'utilisation du package `sf` est l'objet de la deuxième partie de ce document (chapitre 6 et suivants).





## Format des objets spatiaux `sf`


![](img/sf.png)


Les objets `sf` sont des `data.frame` dont l'une des colonnes contient des géométries. Cette colonne est de la classe sfc (*simple feature column*) et chaque individu de la colonne est un sfg (*simple feature geometry)*.   
Ce format est très pratique dans la mesure ou les données et les géométries sont intrinsèquement liées dans un même objet. 



## Import de données

La fonction `st_read()` permet d'importer de nombreux types de fichiers.  
Les lignes suivantes importent la couche des communes du département du Lot situé dans le fichier [geopackage](https://www.geopackage.org/) **lot.gpkg**.

```{r import}
library(sf)
com <- st_read("data/lot.gpkg", layer = "communes")
```



## Affichage


### Aperçu des variables

Les objets `sf` peuvent être explorés avec les fonctions `head()`, `summary()` ou `plot()` par exemple.

```{r exploration}
head(com)
summary(com)
plot(com)
```

### Affichage de la géométrie uniquement.

```{r affichage_geom}
plot(st_geometry(com))
```





## Exercice

1. Les données utilisées dans ce document sont stockées dans un projet RStudio. 
Vous devez le télécharger puis le décompresser sur votre machine. Il vous sera ensuite possible de tester l'ensemble des manipulations proposées dans ce document au sein du projet **geodata**.  
[Télécharger le projet](geodata.zip){.btn .btn-primary .btn-sm role="button"}  

2. Nous utiliserons le package `sf` dans la suite de cette formation.   
Installez le en utilisant la fonction `install.packages()`.


